name: CI/CD - Hello World API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '16.x'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install
      - run: npm ci
      - run: npm run lint
      - run: npm test

  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm ci
      - run: npm audit --audit-level=high

      - name: CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v3

      - name: Build Docker image (Trivy scan)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: my-app:test

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-app:test
          format: sarif
          output: trivy-results.sarif

  package:
    needs: security
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hello-world-api:${{ github.sha }}

  deploy:
    needs: package
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: pip install ansible

      - name: Configure SSH access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Create Vault password file
        run: echo "${{ secrets.VAULT_PASSWORD }}" > .vault_pass

      - name: Run Ansible Playbook remotely
        run: |
          ansible-playbook -i ansible/inventory/hosts ansible/deploy.yml \
            --vault-password-file .vault_pass \
            -e "docker_tag=${{ github.sha }}"
